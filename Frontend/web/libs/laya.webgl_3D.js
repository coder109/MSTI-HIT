!function(e,t){"use strict";class WebBaseRenderNode{constructor(){this.renderelements=[],this._commonUniformMap=[],this._worldParams=new t.Vector4(1,0,0,0),this.lightmapDirtyFlag=-1,this.lightmapScaleOffset=new t.Vector4(1,1,0,0),this.set_caculateBoundingBox(this,this._ownerCalculateBoundingBox)}_renderUpdatePre(e){this._updateMark!=e.cameraUpdateMask&&(this._renderUpdatePreFun.call(this._renderUpdatePreCall,e),this._updateMark=e.cameraUpdateMask)}_calculateBoundingBox(){this._caculateBoundingBoxFun.call(this._caculateBoundingBoxCall)}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}set bounds(e){this._bounds=e}set_renderUpdatePreCall(e,t){this._renderUpdatePreCall=e,this._renderUpdatePreFun=t}set_caculateBoundingBox(e,t){this._caculateBoundingBoxCall=e,this._caculateBoundingBoxFun=t}_needRender(e){return!e||e.intersects(this.bounds)}setRenderelements(e){this.renderelements.length=0;for(var t=0;t<e.length;t++)this.renderelements.push(e[t]),e[t].owner=this}setOneMaterial(e,t){this.renderelements[e]&&(this.renderelements[e].materialShaderData=t.shaderData,this.renderelements[e].materialRenderQueue=t.renderQueue,this.renderelements[e].subShader=t.shader.getSubShaderAt(0),this.renderelements[e].materialId=t._id)}setLightmapScaleOffset(e){e&&e.cloneTo(this.lightmapScaleOffset)}setCommonUniformMap(e){this._commonUniformMap.length=0,e.forEach((e=>{this._commonUniformMap.push(e)}))}shadowCullPass(){return this.castShadow&&this.enable&&0==this.renderbitFlag}_ownerCalculateBoundingBox(){this.baseGeometryBounds._tranform(this.transform.worldMatrix,this._bounds)}_applyLightMapParams(){let e=this.shaderData;if(this.lightmap){let a=this.lightmap;e.setVector(t.RenderableSprite3D.LIGHTMAPSCALEOFFSET,this.lightmapScaleOffset),e._setInternalTexture(t.RenderableSprite3D.LIGHTMAP,a.lightmapColor),e.addDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),a.lightmapDirection?(e._setInternalTexture(t.RenderableSprite3D.LIGHTMAP_DIRECTION,a.lightmapDirection),e.addDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):e.removeDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}else e.removeDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),e.removeDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}_applyLightProb(){this.lightmapIndex>=0||!this.volumetricGI||this.volumetricGI.updateMark!=this.lightProbUpdateMark&&(this.lightProbUpdateMark=this.volumetricGI.updateMark,this.volumetricGI.applyRenderData(this.shaderData))}_applyReflection(){this.probeReflection&&this.reflectionMode!=t.ReflectionProbeMode.off&&this.probeReflection.updateMark!=this.probeReflectionUpdateMark&&(this.probeReflectionUpdateMark=this.probeReflection.updateMark,this.probeReflection.applyRenderData(this.shaderData))}destroy(){this.renderelements.forEach((e=>{e.destroy()})),this.baseGeometryBounds=null,this.transform=null,this.lightmapScaleOffset=null,this.lightmap=null,this.probeReflection=null,this.volumetricGI=null,this.renderelements.length=0,this.renderelements=null,this._commonUniformMap.length=0,this._commonUniformMap=null}}class WebDirectLight{constructor(){this._shadowFourCascadeSplits=new t.Vector3,this._direction=new t.Vector3}setShadowFourCascadeSplits(e){e&&e.cloneTo(this._shadowFourCascadeSplits)}setDirection(e){e&&e.cloneTo(this._direction)}}class WebLightmap{destroy(){this.lightmapColor=null,this.lightmapDirection=null}}class WebMeshRenderNode extends WebBaseRenderNode{constructor(){super(),this.set_renderUpdatePreCall(this,this._renderUpdate)}_renderUpdate(e){e.sceneModuleData.lightmapDirtyFlag!=this.lightmapDirtyFlag&&(this._applyLightMapParams(),this.lightmapDirtyFlag=e.sceneModuleData.lightmapDirtyFlag),this._applyReflection(),this._applyLightProb();let a=this.transform;this.shaderData.setMatrix4x4(t.Sprite3D.WORLDMATRIX,a.worldMatrix),this._worldParams.x=a.getFrontFaceValue(),this.shaderData.setVector(t.Sprite3D.WORLDINVERTFRONT,this._worldParams)}}class WebCameraNodeData{constructor(){this._projectViewMatrix=new t.Matrix4x4}setProjectionViewMatrix(e){e&&e.cloneTo(this._projectViewMatrix)}}class WebSceneNodeData{}class WebPointLight{}class WebReflectionProbe{constructor(){this._id=++WebReflectionProbe._idCounter,this._shCoefficients=[],this._probePosition=new t.Vector3,this._ambientColor=new t.Color}destroy(){this.bound=null,delete this._shCoefficients,delete this._ambientSH}setAmbientSH(e){this._ambientSH=e}setShCoefficients(e){this._shCoefficients.length=0,e.forEach((e=>{var a=new t.Vector4;e.cloneTo(a),this._shCoefficients.push(a)}))}setProbePosition(e){e&&e.cloneTo(this._probePosition)}setreflectionHDRParams(e){e&&e.cloneTo(this._reflectionHDRParams)}setAmbientColor(e){e&&e.cloneTo(this._ambientColor)}applyRenderData(e){this.boxProjection?(e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),e.setVector3(t.RenderableSprite3D.REFLECTIONCUBE_PROBEPOSITION,this._probePosition),e.setVector3(t.RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMAX,this.bound.getMax()),e.setVector3(t.RenderableSprite3D.REFLECTIONCUBE_PROBEBOXMIN,this.bound.getMin())):e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this.ambientMode==t.AmbientMode.SolidColor?(e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),e.setColor(t.RenderableSprite3D.AMBIENTCOLOR,this._ambientColor)):this.iblTex&&this._ambientSH?(e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL),e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),this.iblTex&&(e._setInternalTexture(t.RenderableSprite3D.IBLTEX,this.iblTex),e.setNumber(t.RenderableSprite3D.IBLROUGHNESSLEVEL,this.iblTex.maxMipmapLevel)),this.iblTexRGBD?e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD):e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD),this._ambientSH&&e.setBuffer(t.RenderableSprite3D.AMBIENTSH,this._ambientSH)):(e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_IBL)),e.setNumber(t.RenderableSprite3D.AMBIENTINTENSITY,this.ambientIntensity),e.setNumber(t.RenderableSprite3D.REFLECTIONINTENSITY,this.reflectionIntensity)}}WebReflectionProbe._idCounter=0;class WebSimpleSkinRenderNode extends WebBaseRenderNode{constructor(){super(),this.set_renderUpdatePreCall(this,this._renderUpdate),this._simpleAnimatorParams=new t.Vector4}setSimpleAnimatorParams(e){e.cloneTo(this._simpleAnimatorParams),this.shaderData.setVector(t.SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}_renderUpdate(e){let a=this.shaderData,r=this.transform.worldMatrix,s=this._worldParams;s.x=this.transform.getFrontFaceValue(),a.setMatrix4x4(t.Sprite3D.WORLDMATRIX,r),a.setVector(t.Sprite3D.WORLDINVERTFRONT,s),this._applyLightProb(),this._applyReflection(),a.setVector(t.SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}}class WebSkinRenderNode extends WebBaseRenderNode{constructor(){super(),this._bones=[],this.set_renderUpdatePreCall(this,this._renderUpdate)}setRootBoneTransfom(e){this._cacheRootBone=e.transform}setOwnerTransform(e){this._owner=e.transform}setCacheMesh(e){this._cacheMesh=e,this._skinnedDataLoopMarks=new Uint32Array(e._inverseBindPoses.length)}setBones(e){this._bones=e}setSkinnedData(e){this._skinnedData=e}computeSkinnedData(){for(var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches,a=0,r=this._cacheMesh.subMeshCount;a<r;a++)for(var s=this._cacheMesh.getSubMesh(a)._boneIndicesList,i=this._skinnedData[a],n=0,o=s.length;n<o;n++){var h=s[n];this._computeSubSkinnedData(e,h,i[n],t)}}_computeSubSkinnedData(e,a,r,s){for(let i=0,n=a.length;i<n;i++){let n=a[i];if(this._skinnedDataLoopMarks[n]===t.Stat.loopCount){let e=s[n],t=this._skinnedData[e.subMeshIndex][e.batchIndex],a=16*e.batchBoneIndex,o=16*i;for(let e=0;e<16;e++)r[o+e]=t[a+e]}else{let a=this._bones[n];a&&t.Utils3D._mulMatrixArray(a.transform.worldMatrix.elements,e[n].elements,0,r,16*i),this._skinnedDataLoopMarks[n]=t.Stat.loopCount}}}_renderUpdate(e){let a=this._owner.worldMatrix,r=this._worldParams;r.x=this._owner.getFrontFaceValue(),this._cacheRootBone&&(a=t.Matrix4x4.DEFAULT,r.x=1),this._applyLightProb(),this._applyReflection(),this.shaderData.setMatrix4x4(t.Sprite3D.WORLDMATRIX,a),this.shaderData.setVector(t.Sprite3D.WORLDINVERTFRONT,r)}}class WebSpotLight{setDirection(e){e.cloneTo(this._direction)}getWorldMatrix(e){var a=this.transform.position,r=this.transform.rotation;return t.Matrix4x4.createAffineTransformation(a,r,t.Vector3.ONE,e),e}}class WebVolumetricGI{constructor(){this._id=++WebVolumetricGI._idCounter,this._probeCounts=new t.Vector3,this._probeStep=new t.Vector3,this._params=new t.Vector4,this._params=new t.Vector4}setParams(e){e.cloneTo(this._params)}setProbeCounts(e){e.cloneTo(this._probeCounts)}setProbeStep(e){e.cloneTo(this._probeStep)}applyRenderData(e){e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_VOLUMETRICGI),e.setVector3(t.RenderableSprite3D.VOLUMETRICGI_PROBECOUNTS,this._probeCounts),e.setVector3(t.RenderableSprite3D.VOLUMETRICGI_PROBESTEPS,this._probeStep),e.setVector3(t.RenderableSprite3D.VOLUMETRICGI_PROBESTARTPOS,this.bound.getMin()),e.setVector(t.RenderableSprite3D.VOLUMETRICGI_PROBEPARAMS,this._params),e._setInternalTexture(t.RenderableSprite3D.VOLUMETRICGI_IRRADIANCE,this.irradiance),e._setInternalTexture(t.RenderableSprite3D.VOLUMETRICGI_DISTANCE,this.distance),e.setNumber(t.RenderableSprite3D.AMBIENTINTENSITY,this.intensity)}}WebVolumetricGI._idCounter=0;class Web3DRenderModuleFactory{createSimpleSkinRenderNode(){return new WebSimpleSkinRenderNode}createTransform(e){return new t.Transform3D(e)}createBounds(e,a){return new t.BoundsImpl(e,a)}createVolumetricGI(){return new WebVolumetricGI}createReflectionProbe(){return new WebReflectionProbe}createLightmapData(){return new WebLightmap}createDirectLight(){return new WebDirectLight}createSpotLight(){return new WebSpotLight}createPointLight(){return new WebPointLight}createCameraModuleData(){return new WebCameraNodeData}createSceneModuleData(){return new WebSceneNodeData}createBaseRenderNode(){return new WebBaseRenderNode}createMeshRenderNode(){return new WebMeshRenderNode}createSkinRenderNode(){return new WebSkinRenderNode}}t.Laya.addBeforeInitCallback((()=>{t.Laya3DRender.Render3DModuleDataFactory||(t.Laya3DRender.Render3DModuleDataFactory=new Web3DRenderModuleFactory)}));class WebGLRenderElement3D{constructor(){this._shaderInstances=new t.SingletonList}_addShaderInstance(e){this._shaderInstances.add(e)}_clearShaderInstance(){this._shaderInstances.length=0}_preUpdatePre(e){this._compileShader(e),this._invertFront=this._getInvertFront()}_getInvertFront(){var e;let t=null===(e=this.owner)||void 0===e?void 0:e.transform;return!!t&&t._isFrontFaceInvert}_render(e){var t=e.invertY,a=e.cameraUpdateMask,r=e.sceneData,s=e.cameraData;if(this.isRender)for(var i=this._shaderInstances.elements,n=0,o=this._shaderInstances.length;n<o;n++){const o=i[n];if(o.complete){var h=o.bind(),d=a!==o._uploadMark,l=o._uploadScene!==r||d;if((l||h)&&(r&&o.uploadUniforms(o._sceneUniformParamsMap,r,l),o._uploadScene=r),this.renderShaderData){var c=o._uploadRender!==this.renderShaderData||d;(c||h)&&(o.uploadUniforms(o._spriteUniformParamsMap,this.renderShaderData,c),o._uploadRender=this.renderShaderData)}var D=o._uploadCameraShaderValue!==s||d;(D||h)&&(s&&o.uploadUniforms(o._cameraUniformParamsMap,s,D),o._uploadCameraShaderValue=s);var p=o._uploadMaterial!==this.materialShaderData||d;(p||h)&&(o.uploadUniforms(o._materialUniformParamsMap,this.materialShaderData,p),o._uploadMaterial=this.materialShaderData,e.globalShaderData&&o.uploadUniforms(o._materialUniformParamsMap,e.globalShaderData,p)),o.uploadRenderStateBlendDepth(this.materialShaderData),o.uploadRenderStateFrontFace(this.materialShaderData,t,this._invertFront),this.drawGeometry(o)}}}_compileShader(e){var t=this.subShader._passes;this._clearShaderInstance();for(var a=0,r=t.length;a<r;a++){var s=t[a];if(s.pipelineMode===e.pipelineMode){var i=WebGLRenderElement3D._compileDefine;e.sceneData?e.sceneData._defineDatas.cloneTo(i):e._globalConfigShaderData.cloneTo(i),e.cameraData&&i.addDefineDatas(e.cameraData._defineDatas),this.renderShaderData?(i.addDefineDatas(this.renderShaderData.getDefineData()),s.nodeCommonMap=this.owner._commonUniformMap):s.nodeCommonMap=null,i.addDefineDatas(this.materialShaderData._defineDatas);var n=s.withCompile(i);this._addShaderInstance(n)}}}drawGeometry(e){t.WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry)}destroy(){this.geometry=null,this._shaderInstances=null,this.materialShaderData=null,this.renderShaderData=null,this.transform=null,this.isRender=null}}WebGLRenderElement3D._compileDefine=new t.WebDefineDatas;class WebGLCullUtil{static cullByCameraCullInfo(e,a,r,s,i,n){var o=a,h=e.boundFrustum,d=e.cullingMask;let l=e.staticMask;for(var c=0,D=r;c<D;c++){var p=o[c];if(0!=(Math.pow(2,p.layer)&d)&&0==p.renderbitFlag&&0!=(p.staticMask&l)&&(t.Stat.frustumCulling++,!e.useOcclusionCulling||p._needRender(h))){p.distanceForSort=t.Vector3.distance(p.bounds.getCenter(),e.position),p._renderUpdatePre(n);let a=p.renderelements;if(1==a.length)a[0].materialRenderQueue>2500?i.addRenderElement(a[0]):s.addRenderElement(a[0]);else for(var u=0,_=a.length;u<_;u++){var S=a[u];S.materialRenderQueue>2500?i.addRenderElement(S):s.addRenderElement(S)}}}}static culldirectLightShadow(e,a,r,s,i){s.clear();for(var n=a,o=0,h=r;o<h;o++){var d=n[o];if(d.shadowCullPass()){if(t.Stat.frustumCulling++,t.FrustumCulling.cullingRenderBounds(d.bounds,e)){d.distanceForSort=t.Vector3.distance(d.bounds.getCenter(),e.position),d._renderUpdatePre(i);for(var l=d.renderelements,c=0,D=l.length;c<D;c++){var p=l[c];p.materialRenderQueue<2500&&s.addRenderElement(p)}}}}}static cullingSpotShadow(e,a,r,s,i){s.clear();let n=a,o=e.boundFrustum;for(let a=0,c=r;a<c;a++){let r=n[a],c=r.shadowCullPass();if(r._renderUpdatePre(i),c&&(t.Stat.frustumCulling++,r.distanceForSort=t.Vector3.distance(r.bounds.getCenter(),e.position),r._needRender(o))){let e=r.renderelements;for(var h=0,d=e.length;h<d;h++){var l=e[h];l.materialRenderQueue<2500&&s.addRenderElement(l)}}}}}class WebGLQuickSort{sort(e,t,a,r){this.elementArray=e,this.isTransparent=t,this._quickSort(a,r)}_quickSort(e,t){if(this.elementArray.length>1){var a=this._partitionRenderObject(e,t),r=a-1;e<r&&this._quickSort(e,r),a<t&&this._quickSort(a,t)}}_partitionRenderObject(e,t){for(var a=this.elementArray.elements,r=a[Math.floor((t+e)/2)];e<=t;){for(;this._compare(a[e],r)<0;)e++;for(;this._compare(a[t],r)>0;)t--;if(e<t){var s=a[e];a[e]=a[t],a[t]=s,e++,t--}else if(e===t){e++;break}}return e}_compare(e,t){var a=e.materialRenderQueue-t.materialRenderQueue;return 0===a?(this.isTransparent?t.owner.distanceForSort-e.owner.distanceForSort:e.owner.distanceForSort-t.owner.distanceForSort)+t.owner.sortingFudge-e.owner.sortingFudge:a}}class WebGLRenderListQueue{constructor(e){this._elements=new t.SingletonList,this._isTransparent=e,this.quickSort=new WebGLQuickSort,this._batch=new t.WebGLInstanceRenderBatch}addRenderElement(e){this._elements.add(e)}_batchQueue(){this._isTransparent||this._batch.batch(this._elements)}renderQueue(e){this._batchQueue();var t=this._elements.length;this.quickSort.sort(this._elements,this._isTransparent,0,t-1),e.drawRenderElementList(this._elements),this._batch.clearRenderData()}clear(){this._elements.length=0}}class ShadowCullInfo{}class WebGLDirectLightShadowRP{constructor(){this._cascadesSplitDistance=new Array(WebGLDirectLightShadowRP._maxCascades+1),this._shadowMatrices=new Float32Array(16*WebGLDirectLightShadowRP._maxCascades),this._splitBoundSpheres=new Float32Array(4*WebGLDirectLightShadowRP._maxCascades),this._shadowSliceDatas=[new t.ShadowSliceData,new t.ShadowSliceData,new t.ShadowSliceData,new t.ShadowSliceData],this._shadowMapSize=new t.Vector4,this._shadowBias=new t.Vector4,this._cascadeCount=0,this._shadowMapWidth=0,this._shadowMapHeight=0,this._shadowTileResolution=0,this._lightup=new t.Vector3,this._lightSide=new t.Vector3,this._lightForward=new t.Vector3,this._cascadesSplitDistance=new Array(WebGLDirectLightShadowRP._maxCascades+1),this._renderQueue=new WebGLRenderListQueue(!1),this._frustumPlanes=new Array(new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0)),this._shadowCullInfo=new ShadowCullInfo}get shadowCasterCommanBuffer(){return this._shadowCasterCommanBuffer}set shadowCasterCommanBuffer(e){this._shadowCasterCommanBuffer=e}set light(e){this._light=e;var a=t.Matrix4x4.TEMPMatrix0,r=a.elements,s=this._lightup,i=this._lightSide,n=this._lightForward;t.Matrix4x4.createFromQuaternion(this._light.transform.rotation,a),i.setValue(r[0],r[1],r[2]),s.setValue(r[4],r[5],r[6]),n.setValue(-r[8],-r[9],-r[10]);var o=this._light.shadowResolution,h=this.shadowCastMode=this._light.shadowCascadesMode;if(h==t.ShadowCascadesMode.NoCascades)this._cascadeCount=1,this._shadowTileResolution=o,this._shadowMapWidth=o,this._shadowMapHeight=o;else{this._cascadeCount=h==t.ShadowCascadesMode.TwoCascades?2:4;let e=t.ShadowUtils.getMaxTileResolutionInAtlas(o,o,this._cascadeCount);this._shadowTileResolution=e,this._shadowMapWidth=2*e,this._shadowMapHeight=h==t.ShadowCascadesMode.TwoCascades?e:2*e}}get light(){return this._light}update(e){var a=this._cascadesSplitDistance,r=this._frustumPlanes,s=this.camera.nearplane,i=Math.min(this.camera.farplane,this._light.shadowDistance),n=this._shadowMatrices,o=this._splitBoundSpheres;t.ShadowUtils.getCascadesSplitDistance(this._light.shadowTwoCascadeSplits,this._light._shadowFourCascadeSplits,s,i,this.camera.fieldOfView*t.MathUtils3D.Deg2Rad,this.camera.aspectRatio,this.shadowCastMode,a),t.ShadowUtils.getCameraFrustumPlanes(this.camera._projectViewMatrix,r);var h=t.Vector3._tempVector3;this.camera.transform.getForward(h),t.Vector3.normalize(h,h);for(var d=0;d<this._cascadeCount;d++){var l=this._shadowSliceDatas[d];l.sphereCenterZ=t.ShadowUtils.getBoundSphereByFrustum(a[d],a[d+1],this.camera.fieldOfView*t.MathUtils3D.Deg2Rad,this.camera.aspectRatio,this.camera.transform.position,h,l.splitBoundSphere),t.ShadowUtils.getDirectionLightShadowCullPlanes(r,d,a,s,this._lightForward,l),t.ShadowUtils.getDirectionalLightMatrices(this._lightup,this._lightSide,this._lightForward,d,this._light.shadowNearPlane,this._shadowTileResolution,l,n),this._cascadeCount>1&&t.ShadowUtils.applySliceTransform(l,this._shadowMapWidth,this._shadowMapHeight,d,n)}t.ShadowUtils.prepareShadowReceiverShaderValues(this._shadowMapWidth,this._shadowMapHeight,this._shadowSliceDatas,this._cascadeCount,this._shadowMapSize,n,o)}render(e,a,r){var s=e.sceneData;e.pipelineMode="ShadowCaster";var i=this.destTarget;e.setRenderTarget(i,t.RenderClearFlag.Depth),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0);let n=e.cameraData;for(var o=0,h=this._cascadeCount;o<h;o++){var d=this._shadowSliceDatas[o];this.getShadowBias(d.projectionMatrix,d.resolution,this._shadowBias),this._setupShadowCasterShaderValues(s,d,this._lightForward,this._shadowBias);var l=this._shadowCullInfo;l.position=d.position,l.cullPlanes=d.cullPlanes,l.cullPlaneCount=d.cullPlaneCount,l.cullSphere=d.splitBoundSphere,l.direction=this._lightForward,WebGLCullUtil.culldirectLightShadow(l,a,r,this._renderQueue,e),e.cameraData=d.cameraShaderValue,e.cameraUpdateMask++;var c=d.resolution,D=d.offsetX,p=d.offsetY;this._renderQueue._elements.length>0?(t.Viewport._tempViewport.set(D,p,c,c),t.Vector4.tempVec4.setValue(D+1,p+1,c-2,c-2),e.setViewPort(t.Viewport._tempViewport),e.setScissor(t.Vector4.tempVec4)):(t.Viewport._tempViewport.set(D,p,c,c),e.setViewPort(t.Viewport._tempViewport),t.Vector4.tempVec4.setValue(D,p,c,c),e.setScissor(t.Vector4.tempVec4)),d.cameraUBO&&d.cameraUBData&&d.cameraUBO.setDataByUniformBufferData(d.cameraUBData),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this._renderQueue.renderQueue(e),this._applyCasterPassCommandBuffer(e)}this._applyRenderData(e.sceneData,e.cameraData),e.cameraData=n,e.cameraUpdateMask++}_applyRenderData(e,a){var r=this._light;switch(r.shadowCascadesMode!==t.ShadowCascadesMode.NoCascades?e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE):e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE),r.shadowMode){case t.ShadowMode.Hard:e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftLow:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftHigh:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW)}e.setBuffer(t.ShadowCasterPass.SHADOW_MATRICES,this._shadowMatrices),e.setVector(t.ShadowCasterPass.SHADOW_MAP_SIZE,this._shadowMapSize),e.setBuffer(t.ShadowCasterPass.SHADOW_SPLIT_SPHERES,this._splitBoundSpheres)}_applyCasterPassCommandBuffer(e){this.shadowCasterCommanBuffer&&0!=this.shadowCasterCommanBuffer.length&&this.shadowCasterCommanBuffer.forEach((function(e){e._apply()}))}getShadowBias(e,a,r){var s=2/e.elements[0]/a,i=-this._light.shadowDepthBias*s,n=-this._light.shadowNormalBias*s;if(this._light.shadowMode==t.ShadowMode.SoftHigh){const e=2.5;i*=e,n*=e}r.setValue(i,n,0,0)}_setupShadowCasterShaderValues(e,a,r,s){e.setVector(t.ShadowCasterPass.SHADOW_BIAS,s),e.setVector3(t.ShadowCasterPass.SHADOW_LIGHT_DIRECTION,r);var i=a.cameraShaderValue;i.setMatrix4x4(t.BaseCamera.VIEWMATRIX,a.viewMatrix),i.setMatrix4x4(t.BaseCamera.PROJECTMATRIX,a.projectionMatrix),i.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix),e.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix)}}WebGLDirectLightShadowRP._maxCascades=4;class WebGLForwardAddClusterRP{constructor(){this.opaqueList=new WebGLRenderListQueue(!1),this.transparent=new WebGLRenderListQueue(!0),this.cameraCullInfo=new t.CameraCullInfo,this._zBufferParams=new t.Vector4,this._scissor=new t.Vector4,this._viewPort=new t.Viewport,this._defaultNormalDepthColor=new t.Color(.5,.5,1,0),this.clearColor=new t.Color,this.depthPipelineMode="ShadowCaster",this.depthNormalPipelineMode="DepthNormal"}setViewPort(e){e.cloneTo(this._viewPort)}setScissor(e){e.cloneTo(this._scissor)}setCameraCullInfo(e){this.cameraCullInfo.position=e._transform.position,this.cameraCullInfo.cullingMask=e.cullingMask,this.cameraCullInfo.staticMask=e.staticMask,this.cameraCullInfo.boundFrustum=e.boundFrustum,this.cameraCullInfo.useOcclusionCulling=e.useOcclusionCulling}setBeforeForwardCmds(e){e&&e.length>0&&(this.beforeForwardCmds=e,e.forEach((e=>{e._apply(!1)})))}setBeforeSkyboxCmds(e){e&&e.length>0&&(this.beforeSkyboxCmds=e,e.forEach((e=>{e._apply(!1)})))}setBeforeTransparentCmds(e){e&&e.length>0&&(this.beforeTransparentCmds=e,e.forEach((e=>{e._apply(!1)})))}render(e,a,r){e.cameraUpdateMask++,this.opaqueList.clear(),this.transparent.clear(),WebGLCullUtil.cullByCameraCullInfo(this.cameraCullInfo,a,r,this.opaqueList,this.transparent,e),0!=(this.depthTextureMode&t.DepthTextureMode.Depth)&&this._renderDepthPass(e),0!=(this.depthTextureMode&t.DepthTextureMode.DepthNormals)&&this._renderDepthNormalPass(e),this._viewPort.cloneTo(WebGLForwardAddClusterRP._context3DViewPortCatch),this._scissor.cloneTo(WebGLForwardAddClusterRP._contextScissorPortCatch),this._mainPass(e),this.opaqueList._batch.recoverData()}_renderDepthPass(e){e.pipelineMode=this.depthPipelineMode;var a=this._viewPort,r=e.sceneData;r.addDefine(t.DepthPass.DEPTHPASS),r.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.Vector4.ZERO),t.Viewport._tempViewport.set(a.x,a.y,a.width,a.height),t.Vector4.tempVec4.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport._tempViewport),e.setScissor(t.Vector4.tempVec4),e.setRenderTarget(this.depthTarget,t.RenderClearFlag.Depth),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this.opaqueList.renderQueue(e);var s=this.camera.farplane,i=this.camera.nearplane;this._zBufferParams.setValue(1-s/i,s/i,(i-s)/(i*s),1/i),e.cameraData.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.DepthPass.SHADOW_BIAS),e.cameraData.setVector(t.DepthPass.DEPTHZBUFFERPARAMS,this._zBufferParams),r.removeDefine(t.DepthPass.DEPTHPASS)}_transparentListRender(e){this.transparent.renderQueue(e)}_opaqueListRender(e){this.opaqueList.renderQueue(e)}_renderDepthNormalPass(e){e.pipelineMode=this.depthNormalPipelineMode;var a=this._viewPort;t.Viewport._tempViewport.set(a.x,a.y,a.width,a.height),t.Vector4.tempVec4.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport._tempViewport),e.setScissor(t.Vector4.tempVec4),e.setClearData(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,this._defaultNormalDepthColor,1,0),e.setRenderTarget(this.depthNormalTarget,t.RenderClearFlag.Color|t.RenderClearFlag.Depth),this.opaqueList.renderQueue(e)}opaqueTexturePass(){}_mainPass(e){if(e.pipelineMode=this.pipelineMode,this._rendercmd(this.beforeForwardCmds,e),this._recoverRenderContext3D(e),e.setClearData(this.clearFlag,this.clearColor,1,0),this.enableOpaque&&this._opaqueListRender(e),this._rendercmd(this.beforeSkyboxCmds,e),this.skyRenderNode){let t=this.skyRenderNode.renderelements[0];e.drawRenderElementOne(t)}this.enableOpaque&&this.opaqueTexturePass(),this._rendercmd(this.beforeTransparentCmds,e),this._recoverRenderContext3D(e),this.transparent&&this._transparentListRender(e)}_rendercmd(e,t){e&&0!=e.length&&e.forEach((function(e){t.runCMDList(e._renderCMDs)}))}_recoverRenderContext3D(e){const a=WebGLForwardAddClusterRP._context3DViewPortCatch,r=WebGLForwardAddClusterRP._contextScissorPortCatch;e.setViewPort(a),e.setScissor(r),e.setRenderTarget(this.destTarget,t.RenderClearFlag.Nothing)}}WebGLForwardAddClusterRP._context3DViewPortCatch=new t.Viewport(0,0,0,0),WebGLForwardAddClusterRP._contextScissorPortCatch=new t.Vector4(0,0,0,0);class ShadowSpotData{constructor(){if(this.position=new t.Vector3,this.viewMatrix=new t.Matrix4x4,this.projectionMatrix=new t.Matrix4x4,this.viewProjectMatrix=new t.Matrix4x4,this.cameraShaderValue=t.LayaGL.renderDeviceFactory.createShaderData(null),t.Config3D._uniformBlock){let e=t.UniformBufferObject.getBuffer(t.UniformBufferObject.UBONAME_CAMERA,0),a=t.BaseCamera.createCameraUniformBlock();e||(e=t.UniformBufferObject.create(t.UniformBufferObject.UBONAME_CAMERA,t.BufferUsage.Dynamic,a.getbyteLength(),!1)),this.cameraShaderValue._addCheckUBO(t.UniformBufferObject.UBONAME_CAMERA,e,a),this.cameraShaderValue.setUniformBuffer(t.BaseCamera.CAMERAUNIFORMBLOCK,e),this.cameraUBO=e,this.cameraUBData=a}this.cameraCullInfo=new t.CameraCullInfo}}class WebGLSpotLightShadowRP{constructor(){this._shadowSpotMapSize=new t.Vector4,this._shadowSpotMatrices=new t.Matrix4x4,this._renderQueue=new WebGLRenderListQueue(!1),this._shadowSpotData=new ShadowSpotData,this._lightWorldMatrix=new t.Matrix4x4,this._shadowBias=new t.Vector4}set light(e){this._light=e,this._shadowResolution=this._light.shadowResolution,this._lightWorldMatrix=this._light.getWorldMatrix(this._lightWorldMatrix),this._lightPos=this._light.transform.position,this._spotAngle=this._light.spotAngle,this._spotRange=this._light.spotRange,this._shadowStrength=this._light.shadowStrength}get light(){return this._light}update(e){var t=this._shadowSpotData;this._getSpotLightShadowData(t,this._shadowResolution,this._shadowSpotMatrices,this._shadowSpotMapSize)}render(e,a,r){let s=e.cameraData;var i=e.sceneData;e.pipelineMode="ShadowCaster",e.setRenderTarget(this.destTarget,t.RenderClearFlag.Depth);var n=this._shadowSpotData;this._getShadowBias(n.resolution,this._shadowBias),this._setupShadowCasterShaderValues(i,n,this._shadowBias),WebGLCullUtil.cullingSpotShadow(n.cameraCullInfo,a,r,this._renderQueue,e),e.cameraData=n.cameraShaderValue,e.cameraUpdateMask++,t.Viewport._tempViewport.set(n.offsetX,n.offsetY,n.resolution,n.resolution),t.Vector4.tempVec4.setValue(n.offsetX,n.offsetY,n.resolution,n.resolution),e.setViewPort(t.Viewport._tempViewport),e.setScissor(t.Vector4.tempVec4),n.cameraUBO&&n.cameraUBData&&n.cameraUBO.setDataByUniformBufferData(n.cameraUBData),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this._renderQueue.renderQueue(e),this._applyCasterPassCommandBuffer(e),this._applyRenderData(e.sceneData,e.cameraData),e.cameraData=s,e.cameraUpdateMask++}_getSpotLightShadowData(e,a,r,s){var i=e.position=this._lightPos;e.resolution=a,s.setValue(1/a,1/a,a,a),e.offsetX=0,e.offsetY=0;var n=this._lightWorldMatrix,o=e.viewMatrix,h=e.projectionMatrix,d=e.viewProjectMatrix,l=e.cameraCullInfo.boundFrustum;n.invert(o),t.Matrix4x4.createPerspective(3.1416*this._spotAngle/180,1,.1,this._spotRange,h),t.Matrix4x4.multiply(h,o,d),l.matrix=d,d.cloneTo(r),e.cameraCullInfo.position=i}_getShadowBias(e,a){var r=Math.tan(.5*this._spotAngle*t.MathUtils3D.Deg2Rad)*this._spotRange/e,s=-this._light.shadowDepthBias*r,i=-this._light.shadowNormalBias*r;if(this._shadowMode==t.ShadowMode.SoftHigh){const e=2.5;s*=e,i*=e}a.setValue(s,i,0,0)}_setupShadowCasterShaderValues(e,a,r){e.setVector(t.ShadowCasterPass.SHADOW_BIAS,r);var s=a.cameraShaderValue;s.setMatrix4x4(t.BaseCamera.VIEWMATRIX,a.viewMatrix),s.setMatrix4x4(t.BaseCamera.PROJECTMATRIX,a.projectionMatrix),s.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix),e.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix)}_applyCasterPassCommandBuffer(e){this.shadowCasterCommanBuffer&&0!=this.shadowCasterCommanBuffer.length&&this.shadowCasterCommanBuffer.forEach((function(e){e._apply()}))}_applyRenderData(e,a){switch(this._light.shadowMode){case t.ShadowMode.Hard:e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);break;case t.ShadowMode.SoftLow:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftHigh:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW)}e.setMatrix4x4(t.ShadowCasterPass.SHADOW_SPOTMATRICES,this._shadowSpotMatrices),e.setVector(t.ShadowCasterPass.SHADOW_SPOTMAP_SIZE,this._shadowSpotMapSize)}}class WebGLForwardAddRP{constructor(){this.shadowCastPass=!1,this.enableDirectLightShadow=!1,this.enableSpotLightShadowPass=!1,this.enablePostProcess=!0,this.directLightShadowPass=new WebGLDirectLightShadowRP,this.spotLightShadowPass=new WebGLSpotLightShadowRP,this.shadowParams=new t.Vector4,this.renderpass=new WebGLForwardAddClusterRP,this.finalize=new t.CommandBuffer}setBeforeImageEffect(e){e&&e.length>0&&(this._beforeImageEffectCMDS=e,e.forEach((e=>{e._apply(!1)})))}setAfterEventCmd(e){e&&e.length>0&&(this._afterAllRenderCMDS=e,e.forEach((e=>{e._apply(!1)})))}}const a=new t.Viewport(0,0,0,0),r=new t.Vector4;class WebGLRender3DProcess{constructor(){this.renderpass=new WebGLForwardAddRP}initRenderpass(e,s){let i=this.renderpass.renderpass,n=e._getRenderTexture(),o=0,h=e.clearFlag;h!=t.CameraClearFlags.Sky||e.scene.skyRenderer._isAvailable()||(h=t.CameraClearFlags.SolidColor);let d=n.depthStencilFormat==t.RenderTargetFormat.DEPTHSTENCIL_24_8?t.RenderClearFlag.Stencil:0;switch(h){case t.CameraClearFlags.DepthOnly:case t.CameraClearFlags.Sky:o=t.RenderClearFlag.Depth|d;break;case t.CameraClearFlags.Nothing:o=0;break;case t.CameraClearFlags.ColorOnly:o=t.RenderClearFlag.Color;break;case t.CameraClearFlags.SolidColor:default:o=t.RenderClearFlag.Color|t.RenderClearFlag.Depth|d}let l=e._linearClearColor;l=1!=n.gammaCorrection?e.clearColor:e._linearClearColor,i.camera=e._renderDataModule,i.destTarget=n._renderTarget,i.clearFlag=o,i.clearColor=l;let c=e._needInternalRenderTexture();c?a.set(0,0,n.width,n.height):e.viewport.cloneTo(a),i.setViewPort(a);let D=t.Vector4.tempVec4;D.setValue(a.x,a.y,a.width,a.height),i.setScissor(D),i.enableOpaque=t.Stat.enableOpaque,i.enableTransparent=t.Stat.enableTransparent,i.enableCMD=t.Stat.enableCameraCMD,i.setBeforeSkyboxCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeSkyBox]),i.setBeforeForwardCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeForwardOpaque]),i.setBeforeTransparentCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeTransparent]),this.renderpass.setBeforeImageEffect(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeImageEffect]),this.renderpass.setAfterEventCmd(e._cameraEventCommandBuffer[t.CameraEventFlags.AfterEveryThing]),i.setCameraCullInfo(e),h==t.CameraClearFlags.Sky?i.skyRenderNode=e.scene.skyRenderer._baseRenderNode:i.skyRenderNode=null,i.pipelineMode=t.RenderContext3D._instance.configPipeLineMode;let p=t.Scene3D._updateMark%e.scene._ShadowMapupdateFrequency==0&&t.Stat.enableShadow;if(this.renderpass.shadowCastPass=p,p){let a=this.renderpass.shadowParams;a.setValue(0,0,0,0);let r=e.scene._mainDirectionLight,s=r&&r.shadowMode!=t.ShadowMode.None;if(this.renderpass.enableDirectLightShadow=s,s){this.renderpass.directLightShadowPass.camera=e._renderDataModule,this.renderpass.directLightShadowPass.light=r._dataModule;let s=t.ILaya3D.Scene3D._shadowCasterPass.getDirectLightShadowMap(r);this.renderpass.directLightShadowPass.destTarget=s._renderTarget,a.x=this.renderpass.directLightShadowPass.light.shadowStrength,e.scene._shaderValues.setTexture(t.ShadowCasterPass.SHADOW_MAP,s)}let i=e.scene._mainSpotLight,n=i&&i.shadowMode!=t.ShadowMode.None;if(this.renderpass.enableSpotLightShadowPass=n,n){this.renderpass.spotLightShadowPass.light=i._dataModule;let r=t.ILaya3D.Scene3D._shadowCasterPass.getSpotLightShadowPassData(i);this.renderpass.spotLightShadowPass.destTarget=r._renderTarget,a.y=this.renderpass.spotLightShadowPass.light.shadowStrength,e.scene._shaderValues.setTexture(t.ShadowCasterPass.SHADOW_SPOTMAP,r)}e.scene._shaderValues.setVector(t.ShadowCasterPass.SHADOW_PARAMS,this.renderpass.shadowParams)}if(t.Stat.enablePostprocess&&e.postProcess&&e.postProcess.enable&&e.postProcess.effects.length>0?(this.renderpass.enablePostProcess=t.Stat.enablePostprocess,this.renderpass.postProcess=e.postProcess._context.command,e.postProcess._render(e),this.renderpass.postProcess._apply(!1)):this.renderpass.enablePostProcess=!1,this.renderpass.finalize.clear(),!this.renderpass.enablePostProcess&&c&&e._offScreenRenderTexture){let t=e._offScreenRenderTexture;r.setValue(e.normalizedViewport.x,1-e.normalizedViewport.y,n.width/t.width,-n.height/t.height),this.renderpass.finalize.blitScreenQuad(n,e._offScreenRenderTexture,r)}}renderDepth(e){let a=e.depthTextureMode;if(e.postProcess&&e.postProcess.enable&&(a|=e.postProcess.cameraDepthTextureMode),0!=(a&t.DepthTextureMode.Depth)){e.canblitDepth&&e._internalRenderTexture.depthStencilTexture?(e.depthTexture=e._cacheDepthTexture.depthStencilTexture,t.Camera.depthPass._depthTexture=e.depthTexture,e._shaderValues.setTexture(t.DepthPass.DEPTHTEXTURE,e.depthTexture),t.Camera.depthPass._setupDepthModeShaderValue(t.DepthTextureMode.Depth,e),a&=~t.DepthTextureMode.Depth):(t.Camera.depthPass.getTarget(e,t.DepthTextureMode.Depth,e.depthTextureFormat),this.renderpass.renderpass.depthTarget=e.depthTexture._renderTarget,e._shaderValues.setTexture(t.DepthPass.DEPTHTEXTURE,e.depthTexture))}0!=(a&t.DepthTextureMode.DepthNormals)&&(t.Camera.depthPass.getTarget(e,t.DepthTextureMode.DepthNormals,e.depthTextureFormat),this.renderpass.renderpass.depthNormalTarget=e.depthNormalTexture._renderTarget,e._shaderValues.setTexture(t.DepthPass.DEPTHNORMALSTEXTURE,e.depthNormalTexture)),this.renderpass.renderpass.depthTextureMode=a}fowardRender(e,a){this.initRenderpass(a,e),this.renderDepth(a);let r=a.scene.sceneRenderableManager.renderBaselist.elements,s=a.scene.sceneRenderableManager.renderBaselist.length;this.renderFowarAddCameraPass(e,this.renderpass,r,s),t.Camera.depthPass.cleanUp()}renderFowarAddCameraPass(e,a,r,s){a.shadowCastPass&&(a.enableDirectLightShadow&&(e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),a.directLightShadowPass.update(e),a.directLightShadowPass.render(e,r,s)),a.enableSpotLightShadowPass&&(e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),a.spotLightShadowPass.update(e),a.spotLightShadowPass.render(e,r,s)),a.enableDirectLightShadow?e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW):e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),a.enableSpotLightShadowPass?e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT):e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT)),a.renderpass.render(e,r,s),a._beforeImageEffectCMDS&&this._rendercmd(a._beforeImageEffectCMDS,e),a.enablePostProcess&&a.postProcess&&this._renderPostProcess(a.postProcess,e),a._afterAllRenderCMDS&&this._rendercmd(a._afterAllRenderCMDS,e),a.finalize._apply(!1),e.runCMDList(a.finalize._renderCMDs)}_rendercmd(e,t){e&&0!=e.length&&e.forEach((function(e){t.runCMDList(e._renderCMDs)}))}_renderPostProcess(e,t){t.runCMDList(e._renderCMDs)}}class WebGLDrawNodeCMDData extends t.DrawNodeCMDData{constructor(){super(),this.type=t.RenderCMDType.DrawNode}get node(){return this._node}set node(e){this._node=e}get destShaderData(){return this._destShaderData}set destShaderData(e){this._destShaderData=e}get destSubShader(){return this._destSubShader}set destSubShader(e){this._destSubShader=e}get subMeshIndex(){return this._subMeshIndex}set subMeshIndex(e){this._subMeshIndex=e}apply(e){if(this.node._renderUpdatePre(e),-1==this.subMeshIndex)this.node.renderelements.forEach((t=>{let a=t.subShader,r=t.materialShaderData;t.subShader=this._destSubShader,t.materialShaderData=this._destShaderData,e.drawRenderElementOne(t),t.subShader=a,t.materialShaderData=r}));else{let t=this.node.renderelements[this.subMeshIndex],a=t.subShader,r=t.materialShaderData;t.subShader=this._destSubShader,t.materialShaderData=this._destShaderData,e.drawRenderElementOne(t),t.subShader=a,t.materialShaderData=r}}}class WebGLBlitQuadCMDData extends t.BlitQuadCMDData{constructor(){super(),this.type=t.RenderCMDType.Blit,this._viewport=new t.Viewport,this._scissor=new t.Vector4,this._offsetScale=new t.Vector4,this._sourceTexelSize=new t.Vector4}get dest(){return this._dest}set dest(e){this._dest=e}get viewport(){return this._viewport}set viewport(e){e.cloneTo(this._viewport)}get scissor(){return this._scissor}set scissor(e){e.cloneTo(this._scissor)}get source(){return this._source}set source(e){this._source=e,this._source&&this._sourceTexelSize.setValue(1/this._source.width,1/this._source.height,this._source.width,this._source.height)}get offsetScale(){return this._offsetScale}set offsetScale(e){e.cloneTo(this._offsetScale)}get element(){return this._element}set element(e){this._element=e}apply(e){this.element.materialShaderData._setInternalTexture(t.Command.SCREENTEXTURE_ID,this._source),this.element.materialShaderData.setVector(t.Command.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale),this.element.materialShaderData.setVector(t.Command.MAINTEXTURE_TEXELSIZE_ID,this._sourceTexelSize),e.setViewPort(this._viewport),e.setScissor(this._scissor),e.setRenderTarget(this.dest,t.RenderClearFlag.Nothing),e.drawRenderElementOne(this.element)}}class WebGLDrawElementCMDData extends t.DrawElementCMDData{constructor(){super(),this.type=t.RenderCMDType.DrawElement}setRenderelements(e){this._elemets=e}apply(e){1==this._elemets.length?e.drawRenderElementOne(this._elemets[0]):this._elemets.forEach((t=>{e.drawRenderElementOne(t)}))}}class WebGLSetViewportCMD extends t.SetViewportCMD{constructor(){super(),this.type=t.RenderCMDType.ChangeViewPort,this.scissor=new t.Vector4,this.viewport=new t.Viewport}get viewport(){return this._viewport}set viewport(e){this._viewport=e}get scissor(){return this._scissor}set scissor(e){this._scissor=e}apply(e){e.setViewPort(this.viewport),e.setScissor(this.scissor)}}const s=new t.Viewport,i=new t.Vector4;class WebGLSetRenderTargetCMD extends t.SetRenderTargetCMD{constructor(){super(),this.type=t.RenderCMDType.ChangeRenderTarget,this._clearColorValue=new t.Color}get rt(){return this._rt}set rt(e){this._rt=e}get clearFlag(){return this._clearFlag}set clearFlag(e){this._clearFlag=e}get clearColorValue(){return this._clearColorValue}set clearColorValue(e){e.cloneTo(this._clearColorValue)}get clearDepthValue(){return this._clearDepthValue}set clearDepthValue(e){this._clearDepthValue=e}get clearStencilValue(){return this._clearStencilValue}set clearStencilValue(e){this._clearStencilValue=e}apply(e){e.setRenderTarget(this.rt,t.RenderClearFlag.Nothing),e.setClearData(this.clearFlag,this.clearColorValue,this.clearDepthValue,this.clearStencilValue),this.rt&&(s.set(0,0,this.rt._textures[0].width,this.rt._textures[0].height),i.setValue(0,0,this.rt._textures[0].width,this.rt._textures[0].height),e.setViewPort(s),e.setScissor(i))}}class WebGLSetRenderData extends t.SetRenderDataCMD{constructor(){super(),this.type=t.RenderCMDType.ChangeData}get dataType(){return this._dataType}set dataType(e){this._dataType=e}get propertyID(){return this._propertyID}set propertyID(e){this._propertyID=e}get dest(){return this._dest}set dest(e){this._dest=e}get value(){return this._value}set value(e){switch(this.dataType){case t.ShaderDataType.Int:case t.ShaderDataType.Float:case t.ShaderDataType.Bool:this.data_number=e,this._value=this.data_number;break;case t.ShaderDataType.Matrix4x4:!this.data_mat&&(this.data_mat=new t.Matrix4x4),e.cloneTo(this.data_mat),this._value=this.data_mat;break;case t.ShaderDataType.Color:!this.data_Color&&(this.data_Color=new t.Color),e.cloneTo(this.data_Color),this._value=this.data_Color;break;case t.ShaderDataType.Texture2D:this._value=this.data_texture=e;break;case t.ShaderDataType.Vector4:!this.data_v4&&(this.data_v4=new t.Vector4),e.cloneTo(this.data_v4),this._value=this.data_v4;break;case t.ShaderDataType.Vector2:!this.data_v2&&(this.data_v2=new t.Vector2),e.cloneTo(this.data_v2),this._value=this.data_v2;break;case t.ShaderDataType.Vector3:!this.data_v3&&(this.data_v3=new t.Vector3),e.cloneTo(this.data_v3),this._value=this.data_v3;break;case t.ShaderDataType.Buffer:this._value=this.data_Buffer=e}}apply(e){switch(this.dataType){case t.ShaderDataType.Int:this.dest.setInt(this.propertyID,this.value);break;case t.ShaderDataType.Float:this.dest.setNumber(this.propertyID,this.value);break;case t.ShaderDataType.Bool:this.dest.setBool(this.propertyID,this.value);break;case t.ShaderDataType.Matrix4x4:this.dest.setMatrix4x4(this.propertyID,this.value);break;case t.ShaderDataType.Color:this.dest.setColor(this.propertyID,this.value);break;case t.ShaderDataType.Texture2D:this.dest.setTexture(this.propertyID,this.value);break;case t.ShaderDataType.Vector4:this.dest.setVector(this.propertyID,this.value);break;case t.ShaderDataType.Vector2:this.dest.setVector2(this.propertyID,this.value);break;case t.ShaderDataType.Vector3:this.dest.setVector3(this.propertyID,this.value);break;case t.ShaderDataType.Buffer:this.dest.setBuffer(this.propertyID,this.value)}}}class WebGLSetShaderDefine extends t.SetShaderDefineCMD{constructor(){super(),this.type=t.RenderCMDType.ChangeShaderDefine}get define(){return this._define}set define(e){this._define=e}get dest(){return this._dest}set dest(e){this._dest=e}get add(){return this._add}set add(e){this._add=e}apply(e){this.add?this._dest.addDefine(this.define):this._dest.removeDefine(this.define)}}class WebGLRenderContext3D{constructor(){this._needStart=!0,this._clearColor=new t.Color,this._globalConfigShaderData=t.Shader3D._configDefineValues,this.cameraUpdateMask=0}get sceneData(){return this._sceneData}set sceneData(e){this._sceneData=e}get cameraData(){return this._cameraData}set cameraData(e){this._cameraData=e}get sceneModuleData(){return this._sceneModuleData}set sceneModuleData(e){this._sceneModuleData=e}get cameraModuleData(){return this._cameraModuleData}set cameraModuleData(e){this._cameraModuleData=e}get globalShaderData(){return this._globalShaderData}set globalShaderData(e){this._globalShaderData=e}setRenderTarget(e,t){this._clearFlag=t,e!=this._renderTarget&&(this._renderTarget=e,this._needStart=!0)}setViewPort(e){this._viewPort=e,this._needStart=!0}setScissor(e){this._scissor=e,this._needStart=!0}get sceneUpdataMask(){return this._sceneUpdataMask}set sceneUpdataMask(e){this._sceneUpdataMask=e}get cameraUpdateMask(){return this._cameraUpdateMask}set cameraUpdateMask(e){this._cameraUpdateMask=e}get pipelineMode(){return this._pipelineMode}set pipelineMode(e){this._pipelineMode=e}get invertY(){return this._invertY}set invertY(e){this._invertY=e}runOneCMD(e){e.apply(this)}runCMDList(e){e.forEach((e=>{e.apply(this)}))}setClearData(e,t,a,r){return this._clearFlag=e,t.cloneTo(this._clearColor),this._clearDepth=a,this._clearStencil=r,0}drawRenderElementList(e){this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1);let t=e.elements;for(var a=0,r=e.length;a<r;a++)t[a]._preUpdatePre(this);for(a=0,r=e.length;a<r;a++)t[a]._render(this);return 0}drawRenderElementOne(e){return this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1),e._preUpdatePre(this),e._render(this),0}_bindRenderTarget(){this._renderTarget?t.LayaGL.textureContext.bindRenderTarget(this._renderTarget):t.LayaGL.textureContext.bindoutScreenTarget()}_start(){t.WebGLEngine.instance.scissorTest(!0),t.WebGLEngine.instance.viewport(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),t.WebGLEngine.instance.scissor(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),this._clearFlag!=t.RenderClearFlag.Nothing&&t.WebGLEngine.instance.clearRenderTexture(this._clearFlag,this._clearColor,this._clearDepth,this._clearStencil),t.WebGLEngine.instance.scissor(this._scissor.x,this._scissor.y,this._scissor.z,this._scissor.w)}}class WebGLSkinRenderElement3D extends WebGLRenderElement3D{constructor(){super()}drawGeometry(e){let a=this._shaderInstances.length,r=this.geometry.drawParams.elements;if(this.skinnedData){this.geometry.bufferState.bind();for(var s=0,i=a;s<i;s++)for(var n=0,o=this.geometry.drawParams.length/2;n<o;n++){var h=this.skinnedData[n];e.uploadCustomUniform(t.SkinnedMeshSprite3D.BONES,h);var d=2*n;t.WebGLEngine.instance.getDrawContext().drawElements(this.geometry._glmode,r[d+1],this.geometry._glindexFormat,r[d])}}}}class WebGL3DRenderPassFactory{createSetRenderDataCMD(){return new WebGLSetRenderData}createSetShaderDefineCMD(){return new WebGLSetShaderDefine}createDrawNodeCMDData(){return new WebGLDrawNodeCMDData}createBlitQuadCMDData(){return new WebGLBlitQuadCMDData}createDrawElementCMDData(){return new WebGLDrawElementCMDData}createSetViewportCMD(){return new WebGLSetViewportCMD}createSetRenderTargetCMD(){return new WebGLSetRenderTargetCMD}createSceneRenderManager(){return new t.SceneRenderManagerOBJ}createSkinRenderElement(){return new WebGLSkinRenderElement3D}createRenderContext3D(){return new WebGLRenderContext3D}createRenderElement3D(){return new WebGLRenderElement3D}createRender3DProcess(){return new WebGLRender3DProcess}}t.Laya.addBeforeInitCallback((()=>{t.Laya3DRender.Render3DPassFactory||(t.Laya3DRender.Render3DPassFactory=new WebGL3DRenderPassFactory)}));class WebGLInstanceRenderElement3D extends WebGLRenderElement3D{constructor(){super(),this._vertexBuffers=[],this._updateData=[],this._updateDataNum=[],this._invertFrontFace=!0,this._instanceElementList=new t.SingletonList,this.drawCount=0,this.updateNums=0,this.isRender=!0}static getInstanceBufferState(e,a,r){let s=WebGLInstanceRenderElement3D._instanceBufferStateMap.get(e._id);if(!s){s={state:new t.WebGLBufferState};let i=e.bufferState._vertexBuffers.slice(),n=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);switch(n.setDataLength(16*WebGLInstanceRenderElement3D.MaxInstanceCount*4),n.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,n.instanceBuffer=!0,i.push(n),s.worldInstanceVB=n,a){case t.BaseRenderType.MeshRender:if(r.has(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1)){let e=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);e.setDataLength(4*WebGLInstanceRenderElement3D.MaxInstanceCount*4),e.vertexDeclaration=t.VertexMesh.instanceLightMapScaleOffsetDeclaration,e.instanceBuffer=!0,i.push(e),s.lightmapScaleOffsetVB=e}break;case t.BaseRenderType.SimpleSkinRender:let e=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);e.setDataLength(4*WebGLInstanceRenderElement3D.MaxInstanceCount*4),e.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,e.instanceBuffer=!0,i.push(e),s.simpleAnimatorVB=e}s.state.applyState(i,e.bufferState._bindedIndexBuffer),WebGLInstanceRenderElement3D._instanceBufferStateMap.set(e._id,s)}return s}static create(){return this._pool.pop()||new WebGLInstanceRenderElement3D}static _instanceBufferCreate(e){let t=WebGLInstanceRenderElement3D._bufferPool.get(e);return t||(WebGLInstanceRenderElement3D._bufferPool.set(e,[]),t=WebGLInstanceRenderElement3D._bufferPool.get(e)),t.pop()||new Float32Array(e)}_getInvertFront(){return this._invertFrontFace}addUpdateBuffer(e,t){this._vertexBuffers[this.updateNums]=e,this._updateDataNum[this.updateNums]=t,this.updateNums++}getUpdateData(e,t){return this._updateData[e]=WebGLInstanceRenderElement3D._instanceBufferCreate(t)}_compileShader(e){this._clearShaderInstance();let a=this.subShader._passes;for(let r=0;r<a.length;r++){let s=a[r];if(s.pipelineMode!=e.pipelineMode)continue;let i=WebGLRenderElement3D._compileDefine;e.sceneData?e.sceneData._defineDatas.cloneTo(i):e._globalConfigShaderData.cloneTo(i),e.cameraData&&i.addDefineDatas(e.cameraData._defineDatas),this.renderShaderData?(i.addDefineDatas(this.renderShaderData.getDefineData()),s.nodeCommonMap=this.owner._commonUniformMap):s.nodeCommonMap=null,i.addDefineDatas(this.materialShaderData._defineDatas),i.add(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE),this._updateInstanceData();let n=s.withCompile(i);this._addShaderInstance(n)}}_updateInstanceData(){switch(this.owner.renderNodeType){case t.BaseRenderType.MeshRender:var e=this.getUpdateData(0,16*WebGLInstanceRenderElement3D.MaxInstanceCount);this.addUpdateBuffer(this._instanceStateInfo.worldInstanceVB,16);var a=(n=this._instanceElementList).elements,r=n.length;this.drawCount=r,this.geometry.instanceCount=this.drawCount;for(var s=0;s<r;s++)e.set(a[s].transform.worldMatrix.elements,16*s);if(this.renderShaderData.hasDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP)&&this.renderShaderData.hasDefine(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1)){var i=this.getUpdateData(1,4*WebGLInstanceRenderElement3D.MaxInstanceCount);for(s=0;s<r;s++){let e=a[s].owner.lightmapScaleOffset;i[h=4*s]=e.x,i[h+1]=e.y,i[h+2]=e.z,i[h+3]=e.w}this.addUpdateBuffer(this._instanceStateInfo.lightmapScaleOffsetVB,4)}break;case t.BaseRenderType.SimpleSkinRender:e=this.getUpdateData(0,16*WebGLInstanceRenderElement3D.MaxInstanceCount);this.addUpdateBuffer(this._instanceStateInfo.worldInstanceVB,16);var n;a=(n=this._instanceElementList).elements,r=n.length;this.drawCount=r,this.geometry.instanceCount=this.drawCount;for(s=0;s<r;s++)e.set(a[s].transform.worldMatrix.elements,16*s);var o=this.getUpdateData(1,4*WebGLInstanceRenderElement3D.MaxInstanceCount);for(s=0;s<r;s++){var h,d=a[s].renderShaderData.getVector(t.SimpleSkinnedMeshRenderer.SIMPLE_SIMPLEANIMATORPARAMS);o[h=4*s]=d.x,o[h+1]=d.y,o[h+2]=d.z,o[h+3]=d.w}this.addUpdateBuffer(this._instanceStateInfo.simpleAnimatorVB,4)}}setGeometry(e){this.geometry||(this.geometry=new t.WebGLRenderGeometryElement(e.mode,e.drawType)),e.cloneTo(this.geometry),this.geometry.drawType=t.DrawType.DrawElementInstance,this._instanceStateInfo=WebGLInstanceRenderElement3D.getInstanceBufferState(e,this.owner.renderNodeType,this.renderShaderData._defineDatas),this.geometry.bufferState=this._instanceStateInfo.state}drawGeometry(e){for(let e=0;e<this.updateNums;e++){let t=this._vertexBuffers[e];if(!t)break;let a=this._updateData[e];t.orphanStorage(),t.setData(a.buffer,0,0,this.drawCount*this._updateDataNum[e]*4)}t.WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry)}clearRenderData(){this.drawCount=0,this.updateNums=0,this._vertexBuffers.length=0,this._updateData.forEach((e=>{WebGLInstanceRenderElement3D._bufferPool.get(e.length).push(e)})),this._updateData.length=0,this._updateDataNum.length=0}recover(){WebGLInstanceRenderElement3D._pool.push(this),this._instanceElementList.clear()}destroy(){super.destroy()}}WebGLInstanceRenderElement3D._instanceBufferStateMap=new Map,WebGLInstanceRenderElement3D.MaxInstanceCount=1024,WebGLInstanceRenderElement3D._pool=[],WebGLInstanceRenderElement3D._bufferPool=new Map,e.InstanceRenderElementOBJ=class extends WebGLRenderElement3D{constructor(){super(),this._vertexBuffer3D=[],this._updateData=[],this._updateDataNum=[]}addUpdateBuffer(e,t){this._vertexBuffer3D[this.updateNums]=e,this._updateDataNum[this.updateNums++]=t}getUpdateData(e,t){let a=this._updateData[e];return(!a||a.length<t)&&(a=this._updateData[e]=new Float32Array(t)),a}drawGeometry(e){let a,r;for(let e=0;e<this.updateNums&&(r=this._vertexBuffer3D[e]._deviceBuffer,r);e++)a=this._updateData[e],r.orphanStorage(),r.setData(a.buffer,0,0,this.drawCount*this._updateDataNum[e]*4);t.WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry)}clear(){this.updateNums=0}},e.ShadowCullInfo=ShadowCullInfo,e.ShadowSpotData=ShadowSpotData,e.Web3DRenderModuleFactory=Web3DRenderModuleFactory,e.WebBaseRenderNode=WebBaseRenderNode,e.WebCameraNodeData=WebCameraNodeData,e.WebDirectLight=WebDirectLight,e.WebGL3DRenderPassFactory=WebGL3DRenderPassFactory,e.WebGLBlitQuadCMDData=WebGLBlitQuadCMDData,e.WebGLCullUtil=WebGLCullUtil,e.WebGLDirectLightShadowRP=WebGLDirectLightShadowRP,e.WebGLDrawElementCMDData=WebGLDrawElementCMDData,e.WebGLDrawNodeCMDData=WebGLDrawNodeCMDData,e.WebGLForwardAddClusterRP=WebGLForwardAddClusterRP,e.WebGLForwardAddRP=WebGLForwardAddRP,e.WebGLInstanceRenderElement3D=WebGLInstanceRenderElement3D,e.WebGLQuickSort=WebGLQuickSort,e.WebGLRender3DProcess=WebGLRender3DProcess,e.WebGLRenderContext3D=WebGLRenderContext3D,e.WebGLRenderElement3D=WebGLRenderElement3D,e.WebGLRenderListQueue=WebGLRenderListQueue,e.WebGLSetRenderData=WebGLSetRenderData,e.WebGLSetRenderTargetCMD=WebGLSetRenderTargetCMD,e.WebGLSetShaderDefine=WebGLSetShaderDefine,e.WebGLSetViewportCMD=WebGLSetViewportCMD,e.WebGLSkinRenderElement3D=WebGLSkinRenderElement3D,e.WebGLSpotLightShadowRP=WebGLSpotLightShadowRP,e.WebLightmap=WebLightmap,e.WebMeshRenderNode=WebMeshRenderNode,e.WebPointLight=WebPointLight,e.WebReflectionProbe=WebReflectionProbe,e.WebSceneNodeData=WebSceneNodeData,e.WebSimpleSkinRenderNode=WebSimpleSkinRenderNode,e.WebSkinRenderNode=WebSkinRenderNode,e.WebSpotLight=WebSpotLight,e.WebVolumetricGI=WebVolumetricGI}(window.Laya=window.Laya||{},Laya);
//# sourceMappingURL=laya.webgl_3D.js.map